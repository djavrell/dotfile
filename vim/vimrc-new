set term=screen-256color
set shell=/bin/sh

if has('nvim')
    let s:editor_root=expand("~/.nvim")
else
    let s:editor_root=expand("~/.vim")
endif

let g:python_host_prog='/usr/bin/python'

let mapleader = '='

set pyxversion=3
set encoding=utf-8

"" start  vundle confguration {{{

set nocompatible
filetype off

let &rtp = &rtp . ',' . s:editor_root . '/bundle/Vundle.vim'
call vundle#rc(s:editor_root . "/bundle")

" Plugin Start {{{
" source the plugin list
Plugin 'gmarik/Vundle.vim'                   " vundle plugin

" begin   plugin
" " do not uninstall -> dependency

" " functionalities plugin
Plugin 'tpope/vim-surround'                  " some function for surrounding text
Plugin 'jiangmiao/auto-pairs'
Plugin 'godlygeek/tabular'                  " easy align
Plugin 'brooth/far.vim'                     " better search and replace

" " tags

" " git integration
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-git'
Plugin 'airblade/vim-gitgutter'              " git integration

" " UI plugin
Plugin 'ntpeters/vim-better-whitespace'      " show space at end of line

" " syntax and completion
Plugin 'LnL7/vim-nix'

" " htlm
Plugin 'othree/html5.vim'

" " markdown
Plugin 'plasticboy/vim-markdown'             " markdown support
Plugin 'cespare/vim-toml'
Plugin 'elzr/vim-json'

" " scala
Plugin 'derekwyatt/vim-scala'
Plugin 'gre/play2vim'                        " support of scala-play framwork for vim

" " js family
Plugin 'moll/vim-node'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'Quramy/tsuquyomi'                    " completion typescript

filetype plugin indent on
" end    vundle configutation
" }}}
" Plugin end

set omnifunc=syntaxcomplete#Complete

"" load all config file
runtime! config/**/*.vim
