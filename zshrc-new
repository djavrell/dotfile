zstyle ':completion:*' completer _list _expand _complete _ignored
zstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' file-sort name
zstyle ':completion:*' group-name ''
zstyle ':completion:*' ignore-parents parent pwd .. directory
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' menu select=long-list select=0
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' auto-description 'specify: %d'
zstyle :compinstall filename '/Users/kpr/.zshrc'

autoload -Uz compinit
compinit

source ~/.local/share/zsh-completions/zsh-completions.plugin.zsh
source ~/.local/share/zsh-syntax-hightlighting/zsh-syntax-highlighting.zsh
source ~/.local/share/zsh-history-substring-search/zsh-history-substring-search.zsh
source ~/.local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory autocd nomatch
unsetopt beep
bindkey -v

source "$DOTFILE/alias.sh"
source "$DOTFILE/env.sh"
#source $DOTFILE/prompt.sh

# zsh git integration

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
precmd() {
  psvar=()
  vcs_info
  [[ -n $vcs_info_msg_0_  ]] && print -v 'psvar[1]' -Pr -- "$vcs_info_msg_0_"
}

setopt prompt_subst

PS1="%m%(1v.%F{red}%1v%f.)%# "
#export PS1="$(prompt)"
